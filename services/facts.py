import json
import asyncio
from aiogram import Bot
from motor.motor_asyncio import AsyncIOMotorClient
from config import MONGO_URI, MONGO_DB_NAME

# –ö–æ–ª–ª–µ–∫—Ü–∏—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
COLLECTION_NAME = 'sent-facts-id'

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
client = AsyncIOMotorClient(MONGO_URI)
db = client[MONGO_DB_NAME]
collection = db[COLLECTION_NAME]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —á—Ç–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
async def read_sent_facts():
    sent_facts = []
    async for document in collection.find({}, {'_id': 0, 'id': 1}):
        sent_facts.append(document['id'])
    return sent_facts

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
async def write_sent_fact(fact_id):
    await collection.insert_one({'id': fact_id})

async def send_facts(bot: Bot, channel_id: str, facts_file='words/facts.json'):
    # –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞ facts.json
    with open(facts_file, 'r', encoding='utf-8') as f:
        facts_data = json.load(f)

    # –ß—Ç–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
    sent_facts = await read_sent_facts()

    # –û—Ç—Ñ–∏–ª—å—Ç—Ä—É–µ–º —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã
    new_facts_data = [data for data in facts_data if data['id'] not in sent_facts]

    # –û–≥—Ä–∞–Ω–∏—á–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –¥–æ 3
    limited_facts_data = new_facts_data[:3]

    # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç—Ä–µ–º—è —Ñ–∞–∫—Ç–∞–º–∏
    message = "<b>üáµüá± 3 –∫—Ä–∞—Ç–∫–∏—Ö —Ñ–∞–∫—Ç–∞ –æ –ü–æ–ª—å—à–µ</b>\n\n"
    for data in limited_facts_data:
        message += f"‚Ä¢ {data['fact']}\n\n"
        # –î–æ–±–∞–≤–∏–º ID –ø–æ—Å—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö
        await write_sent_fact(data['id'])

    if message:
        await bot.send_message(chat_id=channel_id, text=message, parse_mode='HTML')